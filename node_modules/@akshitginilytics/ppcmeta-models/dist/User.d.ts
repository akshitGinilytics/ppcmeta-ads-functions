import { Timestamp } from "firebase-admin/firestore";
import { CustomerDataModel, UpdateUserInterface, UserInterface } from "@GeneralTypes";
import { GoogleAdsCustomer, Roles, User as UserGQL } from "@GraphqlTypes";
import { UserCustomer } from "./Customer.js";
import UserDataLoaders from "./UserDataLoaders.js";
export default class User implements UserInterface {
    private _userId;
    protected dataLoaders: UserDataLoaders;
    created: Timestamp;
    defaultTeam: string;
    displayName: string;
    email: string;
    teamsMembership: Record<string, {
        id: string;
        name: string;
        permission: Roles;
    }>;
    refreshToken: string;
    refreshTokenAddedAt: Timestamp | undefined;
    customers: CustomerDataModel[];
    constructor(dataLoaders: UserDataLoaders, userId: string);
    get userId(): string;
    set userId(userId: string);
    setAttributes(data: Partial<UserInterface>): void;
    toJson(): UserInterface;
    toGraphQLType(): UserGQL;
    saveUser(): Promise<FirebaseFirestore.WriteResult>;
    updateUser(update: UpdateUserInterface): Promise<FirebaseFirestore.WriteResult>;
    getCustomerById(id: string): Promise<UserCustomer | null>;
    getCustomersById(customerIds: string[]): Promise<UserCustomer[]>;
    addTeamToUser(teamId: string, teamName: string, permission: Roles, setToDefault?: boolean): Promise<FirebaseFirestore.WriteResult>;
    getUser(): Promise<UserInterface>;
    getCustomers(): Promise<GoogleAdsCustomer[]>;
}
