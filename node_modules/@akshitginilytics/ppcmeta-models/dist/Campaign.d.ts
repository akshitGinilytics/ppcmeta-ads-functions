import { Timestamp } from "firebase-admin/firestore";
import Team from "./Team.js";
import TeamDataLoaders from "./TeamDataLoaders.js";
import UserDataLoaders from "./UserDataLoaders.js";
import { CampaignDataModel } from "@GeneralTypes";
import { CampaignBudget, Metrics } from "@GraphqlTypes";
declare class Campaign implements CampaignDataModel {
    private readonly _campaignId;
    campaignBudget: CampaignBudget;
    firstImportedAt: Timestamp;
    customerId: string;
    lastUpdated: Timestamp;
    metrics: Metrics;
    name: string;
    ownerId: string;
    resourceName: string;
    status: "ENABLED" | "PAUSED" | "REMOVED" | "UNKNOWN" | "UNSPECIFIED";
    teamId: string;
    dataLoader: TeamDataLoaders | UserDataLoaders;
    constructor(dataLoaders: TeamDataLoaders | UserDataLoaders, campaignId: string);
    get campaignId(): string;
    static getCampaign(dataLoader: TeamDataLoaders | UserDataLoaders, campaignId: string): Promise<Campaign>;
    getCampaign(): Promise<Campaign | TeamCampaign>;
    protected _setAttributes(campaignData: CampaignDataModel): void;
    setAttributes(campaignData: Partial<CampaignDataModel>): void;
    toJson(): CampaignDataModel;
}
export declare class TeamCampaign extends Campaign {
    dataLoader: TeamDataLoaders;
    constructor(dataLoader: TeamDataLoaders, campaignId: string);
    getCampaign(): Promise<TeamCampaign>;
    static batchRemoveCampaigns(campaigns: TeamCampaign[], team: Team): Promise<void>;
}
export declare class UserCampaign extends Campaign {
    dataLoader: UserDataLoaders;
    ownerId: string;
    constructor(dataloader: UserDataLoaders, ownerId: string, customerId: string, campaignId: string);
    getCampaign(): Promise<Campaign>;
}
export {};
