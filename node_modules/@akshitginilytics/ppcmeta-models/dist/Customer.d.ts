import { Timestamp } from "firebase-admin/firestore";
import Team from "./Team.js";
import TeamDataLoaders from "./TeamDataLoaders.js";
import UserDataLoaders from "./UserDataLoaders.js";
import { TeamCampaign, UserCampaign } from "./Campaign.js";
import { CustomerDataModel, CampaignDataModel, CampaignsByCustomer } from "@GeneralTypes";
import { CampaignSettings, CustomerSettings, GoogleAdsCustomer } from "@GraphqlTypes";
declare class Customer implements CustomerDataModel {
    protected readonly _customerId: string;
    protected _teamId: string;
    level: number;
    isManager: boolean;
    loginCustomerId: string;
    name: string;
    currency: string;
    timeZone: string;
    resourceName: string;
    lastUpdated: Timestamp | undefined;
    managerIds: string[];
    managerCount: number;
    ownerId: string;
    dataLoader: TeamDataLoaders | UserDataLoaders;
    constructor(dataLoader: TeamDataLoaders | UserDataLoaders, customerId: string);
    get customerId(): string;
    get teamId(): string;
    private set teamId(value);
    toJson(): CustomerDataModel;
    setAttributes(attributes: Partial<CustomerDataModel>): void;
    private static __addCampaignsToBatch;
    private static getDefaultersMonthBudget;
    static addCampaigns(team: Team, campaigns: UserCampaign[]): Promise<FirebaseFirestore.WriteResult[]>;
    static removeCampaigns(team: Team, campaignsByCustomer: CampaignsByCustomer): Promise<void>;
    removeCampaigns(team: Team, campaignsByCustomer: CampaignsByCustomer): Promise<void>;
}
export declare class TeamCustomer extends Customer {
    protected _teamId: string;
    dataLoader: TeamDataLoaders;
    campaigns: TeamCampaign[];
    constructor(dataLoader: TeamDataLoaders, teamId: string, customerId: string);
    get teamId(): string;
    private set teamId(value);
    getCustomer(): Promise<FirebaseFirestore.DocumentData | undefined>;
    static getCustomersByIds(customersIds: string[] | Set<string>, teamId: string, dataLoader: TeamDataLoaders): Promise<TeamCustomer[]>;
    getCustomerSettings(): Promise<CustomerSettings[]>;
    getCampaignsSettings(): Promise<CampaignSettings[]>;
    getCampaignsSettingsByIds(settingsIds: string[] | Set<string>): Promise<CampaignSettings[]>;
    getCampaigns(): Promise<TeamCampaign[]>;
    static batchDeleteCustomersFromTeam(customers: TeamCustomer[], team: Team): Promise<void>;
}
export declare class UserCustomer extends Customer {
    private readonly _userId;
    constructor(dataLoader: UserDataLoaders, userId: string, customerId: string);
    get userId(): string;
    getCustomer(): Promise<FirebaseFirestore.DocumentData | undefined>;
    getCampaigns(): Promise<CampaignDataModel[]>;
    static getUserCustomers(userId: string): Promise<GoogleAdsCustomer[]>;
}
export {};
