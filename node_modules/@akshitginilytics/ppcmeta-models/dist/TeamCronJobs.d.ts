import { TeamDataModel } from "@GeneralTypes";
import { Timestamp } from "firebase-admin/firestore";
import { firestore } from "firebase-admin";
import DocumentReference = firestore.DocumentReference;
interface TeamCronJobsInterface {
    teamId: string;
    ownerId: string;
    ownerRefreshToken: string;
    campaignsByCustomer: Record<string, string[]>;
    campaignsCount: number;
    lastCronJob: Timestamp;
    lastFailedCronJob: Timestamp;
    isCronFailing: boolean;
}
export default class TeamCronJobs implements TeamCronJobsInterface {
    private teamData;
    readonly teamId: string;
    ownerId: string;
    ownerRefreshToken: string;
    campaignsByCustomer: Record<string, string[]>;
    campaignsCount: number;
    lastCronJob: Timestamp;
    isCronFailing: boolean;
    lastFailedCronJob: Timestamp;
    reference: DocumentReference;
    constructor(team: TeamDataModel, ownerRefreshToken?: string | undefined);
    setAttributes(cronJobData: Partial<TeamCronJobsInterface>): void;
    toJson(): TeamCronJobsInterface;
    getCronJob(): Promise<TeamCronJobsInterface | null>;
    createCronJob(ownerRefreshToken?: string | undefined): Promise<firestore.WriteResult>;
    updateCronJob(data: Partial<TeamCronJobsInterface>): Promise<firestore.WriteResult>;
    removeCronJob(): Promise<firestore.WriteResult>;
}
export {};
